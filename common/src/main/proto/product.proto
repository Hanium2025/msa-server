syntax = "proto3";

package hanium.common.proto.product;

option java_package = "hanium.common.proto.product";
option java_multiple_files = true;

import "common.proto";

service ProductService {
  // 1. 메인페이지 조회
  rpc GetProductMain(ProductMainRequest) returns (ProductMainResponse);

  // 1. 상품 등록
  rpc RegisterProduct(RegisterProductRequest) returns (ProductResponse);

  // 2. 상품 조회
  rpc GetProduct(GetProductRequest) returns (ProductResponse);

  // 3. 상품 수정
  rpc UpdateProduct(UpdateProductRequest) returns (ProductResponse);
  rpc DeleteImage(DeleteImageRequest) returns (DeleteImageResponse);

  // 4. 상품 삭제
  rpc DeleteProduct(GetProductRequest) returns (Empty);

  // 5. 상품 찜
  rpc LikeProduct(GetProductRequest) returns (LikeProductResponse);

  // 6. 상품 찜 목록 조회
  rpc GetLikeProducts(GetLikedProductsRequest) returns (LikedProductsResponse);

  // 7. 상품 검색 요청
  rpc SearchProduct(ProductSearchRequest) returns (ProductSearchResponse);

  // 8. 상품 검색 기록 조회
  rpc ProductSearchHistory(ProductSearchHistoryRequest) returns (ProductSearchHistoryResponse);

  // 9. 상품 검색 기록 선택 삭제
  rpc DeleteProductSearchHistory(DeleteProductSearchHistoryRequest) returns (Empty);

  // 10. 상품 검색 기록 전체 삭제
  rpc DeleteAllProductSearchHistory(DeleteAllProductSearchHistoryRequest) returns (Empty);

  // 11. 상품 카테고리별 보기
  rpc GetProductByCategory(GetProductByCategoryRequest) returns (SimpleProductsResponse);

  // 9. 상품 신고
  rpc ReportProduct(ReportProductRequest) returns (Empty);

  //채팅
  rpc Chat(stream ChatMessage) returns (stream ChatResponseMessage);

  //s3 PresignedUrls 발급
  rpc CreatePresignedUrls(CreatePresignedUrlsRequest) returns (CreatePresignedUrlsResponse);

  //s3 채팅방별 채팅 내역 조회
  rpc getAllMessagesByChatroomId(GetAllMessagesByChatroomIdRequest) returns (GetAllMessagesByChatroomResponse);
  rpc CreateChatroom(CreateChatroomRequest) returns (CreateChatroomResponse);
  rpc GetMyChatrooms(ListMyChatroomsRequest)returns (ListMyChatroomsResponse);

}

message Empty {}

message ProductMainRequest {
  int64 member_id = 1;
}
message ProductMainResponse {
  repeated SimpleProductResponse products = 1;
  repeated CategoryMain categories = 2;
}
message SimpleProductResponse {
  int64 product_id = 1;
  string title = 2;
  int64 price = 3;
  string image_url = 4;
}
message CategoryMain {
  string name = 1;
  string image_url = 2;
}

// 1. 상품 등록
message RegisterProductRequest {
  int64 seller_id = 1;
  string title = 2;
  string content = 3;
  int64 price = 4;
  string category = 5;
  repeated string image_urls = 6;
}

message ProductResponse {
  int64 product_id = 1;
  int64 seller_id = 2;
  string seller_nickname = 3;
  string seller_profile_img = 4;
  string created_at = 5;
  string title = 6;
  string content = 7;
  int64 price = 8;
  string category = 9;
  string status = 10;
  bool seller = 11;
  bool liked = 12;
  int64 like_count = 13;
  repeated ProductImageResponse images = 14;
}
message ProductImageResponse {
  int64 product_image_id = 1;
  string image_url = 2;
}

// 2. 상품 조회
message GetProductRequest {
  int64 member_id = 1;
  int64 product_id = 2;
}

// 3. 상품 수정
message UpdateProductRequest {
  int64 member_id = 1;
  int64 product_id = 2;
  string title = 3;
  string content = 4;
  int64 price = 5;
  string category = 6;
  repeated string image_urls = 7;
}
message DeleteImageRequest {
  int64 member_id = 1;
  int64 product_id = 2;
  repeated int64 left_image_ids = 3;
}
message DeleteImageResponse {
  int32 left_img_count = 1;
}

// 5. 상품 찜 / 찜 취소
message LikeProductResponse {
  bool likeCanceled = 1;
}

// 6. 상품 찜 목록 조회
message GetLikedProductsRequest {
  int64 member_id = 1;
  int32 page = 2;
}
message LikedProductsResponse {
  repeated SimpleProductResponse likedProducts = 1;
}

// 7. 상품 검색 요청
message ProductSearchRequest {
  int64 member_id = 1;
  string keyword = 2;
}
message ProductSearchResponse {
  repeated SimpleProductResponse productList = 1;
}

// 8. 상품 검색 기록 조회
message ProductSearchHistoryRequest {
  int64 member_id = 1;
}

message ProductSearchHistoryResponse {
  repeated ProductSearchHistory productSearchHistoryList = 1;
}
message ProductSearchHistory {
  int64 search_id = 1;
  string keyword = 2;
}

// 9. 상품 검색 기록 선택 삭제
message DeleteProductSearchHistoryRequest {
  int64 search_id = 1;
  int64 member_id = 2;
}

// 10. 상품 검색 기록 전체 삭제
message DeleteAllProductSearchHistoryRequest {
  int64 member_id = 1;
}

// 11. 상품 카테고리별 조회 요청
message GetProductByCategoryRequest {
  int64 member_id = 1;
  string category = 2;
  string sort = 3;
  int32 page = 4;
}
message SimpleProductsResponse {
  repeated SimpleProductResponse products = 1;
}

// 9. 상품 신고
message ReportProductRequest {
  int64 member_id = 1;
  int64 product_id = 2;
  string reason = 3;
  string details = 4;
}

message ChatMessage {
  int64 chatroomId = 1;
  int64 senderId = 2;
  int64 receiverId = 3;
  string content = 4;
  int64 timestamp = 5;
  MessageType type = 6;
  repeated string imageUrls = 7;
}

message ChatResponseMessage {
  int64 chatroomId = 1;
  int64 senderId = 2;
  int64 receiverId = 3;
  string content = 4;
  int64 timestamp = 5;
  int64 messageId = 6;
  MessageType type = 7;
  repeated string imageUrls = 8;
  string receiverNickname = 9;
}

enum MessageType{
  TEXT = 0;
  IMAGE = 1;
  DIRECT_REQUEST = 3;
  DIRECT_ACCEPT = 4;
  PARCEL_REQUEST= 5;
  PARCEL_ACCEPT= 6;
  PAYMENT_REQUEST=7;
  PAYMENT_DONE=8;
  ADDRESS_REGISTER=9;
  ADDRESS_REGISTER_DONE=10;
}
message PresignedUrl {
  string putUrl = 1;
  string getUrl = 2;
  string key = 3;
}

message CreatePresignedUrlsRequest {
  int64 chatroomId = 1;
  int32 count = 2;   // 1~3
  string contentType = 3;  // "image/jpeg" 등
}

message CreatePresignedUrlsResponse{
  repeated PresignedUrl urls = 1;
}

message GetAllMessagesByChatroomIdRequest{
  int64 chatRoomId = 1;
}

message GetAllMessagesByChatroomResponse{
  repeated ChatResponseMessage chatResponseMessage = 1;
}

message CreateChatroomRequest {
  int64 productId = 1;
  int64 senderId = 2;
  int64 receiverId = 3;
}

message CreateChatroomResponse {
  int64 chatroomId = 1;
}

message ListMyChatroomsRequest {
  int64 memberId = 1;
}

message ChatroomSummary{
  int64 chatroomId = 1;
  string roomName = 2;
  string latestMessage = 3;
  int64 productId = 4;
  int64 opponentId = 5; //상대방 아이디
  int64 latestTime = 6;
  string opponentProfileUrl =7;
  string opponentNickname =8;

}
message ListMyChatroomsResponse {
  repeated ChatroomSummary items = 1;
}